{"ast":null,"code":"import _newArrowCheck from \"babel-runtime/helpers/newArrowCheck\";\nimport { curry } from \"flow-static-land/lib/Fun\";\nimport _typeof from \"babel-runtime/helpers/typeof\";\nimport { isLastIndex, remove } from \"@jumpn/utils-array\";\nimport _Object$keys from \"babel-runtime/core-js/object/keys\";\nimport _toConsumableArray from \"babel-runtime/helpers/toConsumableArray\";\nimport isDeepEqual from \"fast-deep-equal\";\nimport _defineProperty from \"babel-runtime/helpers/defineProperty\";\nimport _extends from \"babel-runtime/helpers/extends\";\nimport _slicedToArray from \"babel-runtime/helpers/slicedToArray\";\nimport _Object$entries from \"babel-runtime/core-js/object/entries\";\nimport _objectWithoutProperties from \"babel-runtime/helpers/objectWithoutProperties\";\nimport _Symbol from \"babel-runtime/core-js/symbol\";\n\nvar _this = void 0,\n    get = function (e, r) {\n  return _newArrowCheck(this, _this), r[e];\n}.bind(void 0),\n    get$1 = curry(get),\n    _this$2 = void 0,\n    isObject = function (e) {\n  return _newArrowCheck(this, _this$2), null !== e && \"object\" === (void 0 === e ? \"undefined\" : _typeof(e));\n}.bind(void 0),\n    is = function (e) {\n  return _newArrowCheck(this, _this$2), Array.isArray(e) || isObject(e);\n}.bind(void 0),\n    _this$1 = void 0,\n    getInIfNeeded = function (e, r, t) {\n  return _newArrowCheck(this, _this$1), isLastIndex(r, e) ? t : getInRecur(e + 1, r, t);\n}.bind(void 0),\n    getNotCompositeErrorMessage = function (e, r, t) {\n  return _newArrowCheck(this, _this$1), \"Expected to find a composite at [\" + String(r.join(\", \")) + \"][\" + String(e) + \"], but instead got: \" + (void 0 === t ? \"undefined\" : _typeof(t));\n}.bind(void 0),\n    ensureIsComposite = function (e, r, t) {\n  if (_newArrowCheck(this, _this$1), is(t)) return t;\n  throw new Error(getNotCompositeErrorMessage(e, r, t));\n}.bind(void 0),\n    getInRecur = function (e, r, t) {\n  return _newArrowCheck(this, _this$1), void 0 === t ? void 0 : getInIfNeeded(e, r, get$1(r[e], ensureIsComposite(e, r, t)));\n}.bind(void 0),\n    getIn = function (e, r) {\n  return _newArrowCheck(this, _this$1), 0 === e.length ? void 0 : getInRecur(0, e, r);\n}.bind(void 0),\n    getIn$1 = curry(getIn),\n    _this$3 = void 0,\n    getKeys = function (e) {\n  return _newArrowCheck(this, _this$3), Array.isArray(e) ? [].concat(_toConsumableArray(e.keys())) : _Object$keys(e);\n}.bind(void 0),\n    _this$4 = void 0,\n    hasIn = function (e, r, t) {\n  return _newArrowCheck(this, _this$4), isDeepEqual(getIn$1(e, t), r);\n}.bind(void 0),\n    hasIn$1 = curry(hasIn),\n    _this$5 = void 0,\n    hasKey = function (e, r) {\n  return _newArrowCheck(this, _this$5), Object.prototype.hasOwnProperty.call(r, e);\n}.bind(void 0),\n    hasKey$1 = curry(hasKey),\n    _this$6 = void 0,\n    haveSameProps = function (e, r) {\n  _newArrowCheck(this, _this$6);\n\n  var t = getKeys(e);\n  return t.length === getKeys(r).length && t.every(function (t) {\n    return _newArrowCheck(this, _this$6), hasKey$1(t, r) && get$1(t, e) === get$1(t, r);\n  }.bind(this));\n}.bind(void 0),\n    haveSameProps$1 = curry(haveSameProps),\n    _this$7 = void 0,\n    isEmpty = function (e) {\n  return _newArrowCheck(this, _this$7), 0 === getKeys(e).length;\n}.bind(void 0),\n    _this$8 = void 0,\n    mapObject = function (e, r) {\n  return _newArrowCheck(this, _this$8), _Object$entries(r).reduce(function (t, i) {\n    var n = _slicedToArray(i, 2),\n        o = n[0],\n        s = n[1];\n\n    return _newArrowCheck(this, _this$8), _extends({}, t, _defineProperty({}, o, e(s, o, r)));\n  }.bind(this), {});\n}.bind(void 0),\n    map = function (e, r) {\n  return _newArrowCheck(this, _this$8), Array.isArray(r) ? r.map(e) : mapObject(e, r);\n}.bind(void 0),\n    map$1 = curry(map),\n    _this$9 = void 0,\n    objectRemove = function (e, r) {\n  r[e];\n\n  var t = _objectWithoutProperties(r, [e]);\n\n  return _newArrowCheck(this, _this$9), t;\n}.bind(void 0),\n    remove$1 = function (e, r) {\n  return _newArrowCheck(this, _this$9), Array.isArray(r) ? remove(e, 1, r) : objectRemove(e, r);\n}.bind(void 0),\n    remove$2 = curry(remove$1),\n    _this$12 = void 0,\n    shallowCopy = function (e) {\n  return _newArrowCheck(this, _this$12), Array.isArray(e) ? [].concat(_toConsumableArray(e)) : _extends({}, e);\n}.bind(void 0),\n    _this$11 = void 0,\n    createReduceContext = function (e) {\n  _newArrowCheck(this, _this$11);\n\n  var r = shallowCopy(e);\n  return {\n    origin: r,\n    current: r,\n    previous: void 0\n  };\n}.bind(void 0),\n    set = function (e, r, t) {\n  return _newArrowCheck(this, _this$11), t[e] = r, get$1(e, t);\n}.bind(void 0),\n    updateSet = function (e, r, t, i) {\n  return _newArrowCheck(this, _this$11), _extends({}, i, {\n    current: set(e[r], t, i.current),\n    previous: i.current\n  });\n}.bind(void 0),\n    updateRemove = function (e, r, t) {\n  _newArrowCheck(this, _this$11);\n\n  var i = remove$2(e[r], t.current);\n  return 0 === r ? _extends({}, t, {\n    current: i,\n    origin: i\n  }) : _extends({}, t, {\n    previous: set(e[r - 1], i, t.previous)\n  });\n}.bind(void 0),\n    removeAction = _Symbol(\"composite.updateIn.removeAction\"),\n    update = function (e, r, t, i) {\n  return _newArrowCheck(this, _this$11), t === removeAction ? updateRemove(e, r, i) : updateSet(e, r, t, i);\n}.bind(void 0),\n    createSupporting = function (e) {\n  return _newArrowCheck(this, _this$11), \"number\" == typeof e ? [] : {};\n}.bind(void 0),\n    copyOrCreate = function (e, r, t) {\n  return _newArrowCheck(this, _this$11), hasKey$1(e, t) ? shallowCopy(get$1(e, t)) : createSupporting(r);\n}.bind(void 0),\n    getNext = function (e, r, t, i) {\n  return _newArrowCheck(this, _this$11), isLastIndex(e, t) ? r(get$1(e[t], i)) : copyOrCreate(e[t], e[t + 1], i);\n}.bind(void 0),\n    getReducer = function (e, r) {\n  return _newArrowCheck(this, _this$11), function (t, i, n) {\n    return _newArrowCheck(this, _this$11), update(e, n, getNext(e, r, n, t.current), t);\n  }.bind(this);\n}.bind(void 0),\n    updateIn = function (e, r, t) {\n  return _newArrowCheck(this, _this$11), 0 === e.length ? t : e.reduce(getReducer(e, r), createReduceContext(t)).origin;\n}.bind(void 0),\n    updateInCurried = curry(updateIn);\n\nupdateInCurried.remove = removeAction;\n\nvar _this$10 = void 0,\n    remove$3 = function () {\n  return _newArrowCheck(this, _this$10), updateInCurried.remove;\n}.bind(void 0),\n    removeIn = function (e, r) {\n  return _newArrowCheck(this, _this$10), updateInCurried(e, remove$3, r);\n}.bind(void 0),\n    removeIn$1 = curry(removeIn),\n    _this$13 = void 0,\n    set$1 = function (e, r, t) {\n  _newArrowCheck(this, _this$13);\n\n  var i = shallowCopy(t);\n  return i[e] = r, i;\n}.bind(void 0),\n    set$2 = curry(set$1),\n    _this$14 = void 0,\n    setIn = function (e, r, t) {\n  return _newArrowCheck(this, _this$14), updateInCurried(e, function () {\n    return _newArrowCheck(this, _this$14), r;\n  }.bind(this), t);\n}.bind(void 0),\n    setIn$1 = curry(setIn),\n    _this$15 = void 0,\n    xor = function (e, r) {\n  return _newArrowCheck(this, _this$15), Boolean(Number(e) ^ Number(r));\n}.bind(void 0),\n    shallowEqual = function (e, r) {\n  return _newArrowCheck(this, _this$15), e === r || !xor(Array.isArray(e), Array.isArray(r)) && haveSameProps$1(e, r);\n}.bind(void 0),\n    shallowEqual$1 = curry(shallowEqual),\n    _this$16 = void 0,\n    toUndefinedIfEmpty = function (e) {\n  return _newArrowCheck(this, _this$16), isEmpty(e) ? void 0 : e;\n}.bind(void 0);\n\nexport { get$1 as get, getIn$1 as getIn, getKeys, hasIn$1 as hasIn, hasKey$1 as hasKey, haveSameProps$1 as haveSameProps, is, isEmpty, map$1 as map, remove$2 as remove, removeIn$1 as removeIn, set$2 as set, setIn$1 as setIn, shallowCopy, shallowEqual$1 as shallowEqual, toUndefinedIfEmpty, updateInCurried as updateIn };","map":null,"metadata":{},"sourceType":"module"}